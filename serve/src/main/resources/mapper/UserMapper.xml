<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiao.testproject.testproject.dao.UserDao">
<!--结果集映射-->
    <resultMap type="com.jiao.testproject.testproject.entity.UserEntity" id="UserEntityResult">
        <id     property="user_id"        column="user_id"      />
        <result property="user_name"      column="user_name"    />
        <result property="user_password" column="user_password"     />
        <result property="role"          column="role"   />
        <result property="status"        column="status"    />
        <result property="creater_id"    column="creater_id"   />
        <result property="create_time"   column="create_time"    />
        <result property="updater_id"    column="updater_id"   />
        <result property="update_time"   column="update_time"    />
    </resultMap>

<!--动态sql-->
    <sql id="select_column">
        select user_id, user_name, user_password, role, status, creater_id, create_time, updater_id, update_time
        from user
    </sql>

<!-- 查询条件 -->
    <sql id="sqlwhereSearch">
        <where>
            <if test="user_id !=null">
                and user_id = #{user_id}
            </if>
        </where>
    </sql>

<!--查询所有的用户-->
    <select id="selectUserAll"  resultMap="UserEntityResult">
        <include refid="select_column"/>
    </select>

 <!--查询单个的用户-->
    <select id="selectUserById"  parameterType="java.lang.Integer" resultMap="UserEntityResult">
        select user_id, user_name, user_password, role, status, creater_id, create_time, updater_id, update_time
        from user where user_id = #{user_id}
    </select>



<!-- 查询用户按条件  -->
    <select id="getUserByCondition"  parameterType="com.jiao.testproject.testproject.entity.UserEntity" resultMap="UserEntityResult">
        select user_id, user_name, user_password, role, status, creater_id, create_time, updater_id, update_time
        from user
        where 1=1
        <if test="username != null or username !=''">
            user_name = #{user_name}
        </if>

    </select>

<!-- 更新密码-->
    <update id="updatePasswordById" parameterType="com.jiao.testproject.testproject.entity.UserEntity">
        update user
        <set>
            <if test="user_password != null and user_password != ''">user_password = #{user_password},</if>
            update_time = sysdate()
        </set>
        where user_id = #{user_id}
    </update>

<!--注销登录-->
    <update id="logOutUserById" parameterType="com.jiao.testproject.testproject.entity.UserEntity">
        update user
        <set>
            <if test="status != null">status = #{status},</if>
            update_time = sysdate()
        </set>
        where user_id = #{user_id}
    </update>

<!-- 删除用户-->
    <delete id="deleteAccountById" parameterType="Integer">
        delete from user where user_id = #{user_id}
    </delete>

    <!--自定义删除 user 删除 flie表同时删除 可能会遇到数据库 安全策略问题 不允许 非 primay key c  u d-->
    <delete id="deleteUserAndFileById" parameterType="Integer">
        DELETE user,filelist from user LEFT JOIN filelist ON user.user_id=filelist.user_id WHERE user.user_id=#{userId};
    </delete>


    <resultMap id="roleMap" type="com.jiao.testproject.testproject.dto.SysPermission">
        <!--<id column="code_id" property="code_id"></id>-->
        <result property="role_code" column="role_code"></result>
        <result property="user_role" column="user_role"></result>
    </resultMap>

    <select id="getUserPermission" resultMap="roleMap" parameterType="java.lang.String">
        SELECT
            role.user_role,
            role.role_code
        FROM
            USER INNER JOIN role ON USER.role_code = role.role_code
        WHERE
            USER.user_id = #{userId}
        GROUP BY
            role.user_role,
            role.role_code
        ORDER BY
            role.user_role ASC
    </select>
    <select id="getUserDetails" resultType="java.util.Map">
        SELECT
            t1.user_id userId,
            t1.user_password userPass,
            t1.sex,
            t1.department,
            t1.create_time userCreateTIme,
            t1.update_time userUpdateTIme,
            t2.role_name roleName,
            t2.role_code roleCode,
            t2.create_time roleCreateTime
        FROM
            USER t1
                INNER JOIN role t2 ON t1.role_code = t2.role_code
        ORDER BY
            userCreateTIme DESC,
            userUpdateTIme DESC
    </select>

    <select id="getUserRoleCount" resultType="java.util.Map">
        SELECT
            t2.role_code rodeCode ,t2.role_name roleName,count(1) count
        FROM
            USER t1
            INNER JOIN role t2 ON t1.role_code = t2.role_code
        GROUP BY t2.role_code
    </select>

<!--    返回 List<Map<String,Object>-->
    <resultMap id="mapUserDto" type="com.jiao.testproject.testproject.entity.UserEntity">
        <result column="user_id" property="user_id"></result>
        <result column="user_name" property="user_name"></result>
        <result column="role" property="role"></result>
        <result column="create_time" property="create_time"></result>
        <result column="update_time" property="update_time"></result>
    </resultMap>

    <select id="getUserMap" resultMap="mapUserDto">
        select * from user
    </select>


</mapper>